Accuracy.Rate
Error.Rate <- (FalN + FalP) / Tot
#The overall error rate is quite bad
Error.Rate
# Sensitivity -- rate of correct positives
Sensitivity <- TruP / TotP
Sensitivity
#Prediction for true positives is quite bad
# Specificity -- rate of correct negatives
Specificity <- TruN / TotN
Specificity
#Predicting true negatives is really good with this model.
# False Positive Rate
FalseP.Rate <- 1 - Specificity
FalseP.Rate
logit.rates.40.red <- c(Accuracy.Rate, Error.Rate, Sensitivity, Specificity, FalseP.Rate)
names(logit.rates.40.red) <- c("Accuracy Rate", "Error Rate", "Sensitivity", "Specificity", "False Positives")
print(logit.rates.40.red, digits=2)
logit.fit.stats.compare.red1 <- rbind(logit.fit.stats.compare.red, logit.rates.40.red)
print(logit.fit.stats.compare.red1, digits=3)
voter %>%
select(age, party, ethnicity, income, cd, dma,vh14p, vh12g, vh12p, vh10p, vh08g, vh08p, vh06g, vh04g, vh04p, vh02g, vh00g, net_worth, petowner_dog, intrst_musical_instruments_in_hh, g08_precinct_turnout, p12_precinct_turnout, vh14p, g12_precinct_turnout ) ->
voter.final
str(voter.final)
#Logistic prediction model starts here:
attach(voter.final)
train <- nrow(voter.final)
train
train <- sample(1:nrow(voter.rm), nrow(voter.rm))
train
#Logistic prediction model starts here:
attach(voter.final)
set.seed(1)
train <- sample(1:nrow(voter.rm), nrow(voter.rm))
test <- seq(1:nrow(voter.rm))
train
test
train <- sample(1:nrow(voter.rm), nrow(voter.rm))
test <- sample(1:nrow(voter.rm), nrow(voter.rm))
train
test
#Logistic prediction model starts here:
attach(voter.final)
set.seed(1)
#Logistic prediction model starts here:
attach(voter.final)
set.seed(1)
train <- sample(1:nrow(voter.rm), nrow(voter.rm))
test <- seq(1:nrow(voter.rm), nrow(voter.rm))
test <- sample(1:nrow(voter.rm), nrow(voter.rm))
train
test
#Logistic prediction model starts here:
attach(voter.final)
train <- seq(1:nrow(voter.rm))
test <- seq(1:nrow(voter.rm))
train
test
str(voter.final)
predict(voter.logit.train, voter.rm, type = "response")
x <- predict(voter.logit.train, voter.rm, type = "response")
y <- ifelse(x>0.5, 1, 0)
y
sum(y)
sum(y, na.rm = T)
sum(voter.final$vh12g)
sum(as.numeric(voter.final$vh12g))
tail(x)
x <- predict(voter.logit.train, voter.final, type = "response")
newdata <- data.frame(glucose = c(20,  180))
newdata
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(corrplot))
suppressPackageStartupMessages(library(Hmisc))
suppressPackageStartupMessages(library(ROCR))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(GGally))
suppressPackageStartupMessages(library(lmtest))
suppressPackageStartupMessages(library(car))
suppressPackageStartupMessages(library(perturb))
voter <- read.csv("..\\voterfile\\voterfile.csv")
str(voter)
head(voter)
voter.result <- read.csv("optimus_output.csv")
str(voter.result)
inner_join(voter,voter.result, by = "optimus_id")
cbind(voter, "vh14g" = voter.result$vote, "vh14prob" = voter.result$prob)
voter.combine <- cbind(voter, "vh14g" = voter.result$vote, "vh14prob" = voter.result$prob)
voter.combine %>%
mutate(TotalVotes12 = sum(vh12g))
voter.combine %>%
summarise("x" = sum(vh14g, na.rm = T))
voter.combine %>%
summarise("Votes 2000" = sum(vh00g, na.rm = T),"Votes 2002" = sum(vh14g, na.rm = T), "Votes 2004" = sum(vh04g, na.rm = T),"Votes 2006" = sum(vh06g, na.rm = T), "Votes 2008" = sum(vh08g, na.rm = T),"Votes 2010" = sum(vh10g, na.rm = T),"Votes 2012" = sum(vh12g, na.rm = T), "Votes 2014" = sum(vh14g, na.rm = T))
voter.combine %>%
summarise("Votes 2000" = sum(vh00g, na.rm = T),"Votes 2002" = sum(vh14g, na.rm = T), "Votes 2004" = sum(vh04g, na.rm = T),"Votes 2006" = sum(vh06g, na.rm = T), "Votes 2008" = sum(vh08g, na.rm = T),"Votes 2010" = sum(vh10g, na.rm = T),"Votes 2012" = sum(vh12g, na.rm = T), "Votes 2014" = sum(vh14g, na.rm = T)) ->
votes.sum
class(votes.sum)
as.vector(votes.sum)
votes.sum <- as.vector(votes.sum)
class(votes.sum)
ggplot(mapping = aes(x = votes.sum)) +
geom_col()
ggplot(mapping = aes(x = votes.sum$`Votes 2000`)) +
geom_col()
ggplot(mapping = aes(x = votes.sum$`Votes 2000`)) +
geom_bar()
ggplot(mapping = aes(x = votes.sum)) +
geom_bar()
votes.sum
unlist(votes.sum)
class(votes.sum)
votes.sum
votes.sum <- unlist(votes.sum)
class(votes.sum)
votes.sum <- unlist(votes.sum)
votes.sum
ggplot(mapping = aes(x = votes.sum)) +
geom_bar()
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:VOtes_2014, key = a, value = b)->
votes.sum
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:Votes_2014, key = a, value = b)->
votes.sum
votes.sum
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:Votes_2014, key = Year, value = Sum)->
votes.sum
class(votes.sum)
votes.sum
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum)) +
geom_bar()
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum)) +
geom_col()
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, color = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, fill = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
votes.sum
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, fill = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
voter.combine %>%
group_by(age)
voter.combine %>%
select(age, vh12g, vh14g)
voter.combine %>%
select(age, vh12g, vh14g) %>%
group_by(age)
voter.combine %>%
select(age, vh12g, vh14g) %>%
group_by(age) %>%
summarise(vh12g = sum(vh12g, na.rm = T), vh14g = sum(vh14g, na.rm = T))
voter.combine %>%
select(age, vh10g, vh12g, vh14g) %>%
group_by(age) %>%
summarise(vh10g = sum(vh10g, na.rm =T), vh12g = sum(vh12g, na.rm = T), vh14g = sum(vh14g, na.rm = T))
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, fill = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:Votes_2014, key = Year, value = Sum)->
votes.sum
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))
voter <- read.csv("..\\voterfile\\voterfile.csv")
str(voter)
voter.result <- read.csv("optimus_output.csv")
str(voter.result)
voter.combine <- cbind(voter, "vh14g" = voter.result$vote, "vh14prob" = voter.result$prob)
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:Votes_2014, key = Year, value = Sum)->
votes.sum
class(votes.sum)
votes.sum
votes.sum <- unlist(votes.sum)
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, fill = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
voter.combine %>%
summarise("Votes_2000" = sum(vh00g, na.rm = T),"Votes_2002" = sum(vh14g, na.rm = T), "Votes_2004" = sum(vh04g, na.rm = T),"Votes_2006" = sum(vh06g, na.rm = T), "Votes_2008" = sum(vh08g, na.rm = T),"Votes_2010" = sum(vh10g, na.rm = T),"Votes_2012" = sum(vh12g, na.rm = T), "Votes_2014" = sum(vh14g, na.rm = T)) %>%
gather(Votes_2000:Votes_2014, key = Year, value = Sum)->
votes.sum
votes.sum %>%
ggplot(mapping = aes(x = Year, y = Sum, fill = Year)) +
geom_col() +
theme_bw() +
ylab("Sum of total votes")
setwd("C:/Study/Stat612R/R Project/Code")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
unemploy <- read_csv("..//Data//unemployment.csv")
str(unemploy)
accidents <- read_csv("..//Data//accidents_2017.csv")
str(accidents)
##Bar Graph for Unemployment statistics in 2017
unemploy %>%
filter(Year == "2017")%>%
arrange(`District Name`) %>%
group_by(`District Name`, Demand_occupation) %>%
summarize( Number_Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Number_Unemployed, fill = Demand_occupation)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Unemployment Type") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
##Getting total number of unemployed people by District name
unemploy %>%
select(`District Name`, Year, Number, Demand_occupation) %>%
filter(Year == 2017) %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number)) ->
Unemployed
Unemployed
##Getting number of accidents by District Name
accidents%>%
group_by(`District Name`)%>%
count(sort = TRUE) %>%
rename(Number_of_Accidents = n) ->
NewA
NewA
##Removing unknown rows from Accidents and Unemployment
NewAccidents <- NewA[!NewA$`District Name` == "Unknown",]
Unemployed <- Unemployed[!Unemployed$`District Name` == "No consta",]
##Merging the two dataframes
Total <- merge(Unemployed, NewAccidents, by = "District Name")
Total
##Final ScatterPlot
Total %>%
ggplot(mapping = aes(x = Number_Unemployed, y = Number_of_Accidents, color = `District Name`)) +
geom_point(size = 3) +
xlab("Number of Unemployed") +
ylab("Number of Accidents") +
ggtitle("Number of Accidents for district names filled by unemployment") +
theme_bw() +
scale_color_manual(values = c("red", "blue", "green", "sky blue", "black", "grey", "brown", "gold", "dark green", "pink" ))
##Final ScatterPlot
Total %>%
ggplot(mapping = aes(x = Number_Unemployed, y = Number_of_Accidents, color = `District Name`)) +
geom_point(size = 4) +
xlab("Number of Unemployed") +
ylab("Number of Accidents") +
ggtitle("Number of Accidents for district names filled by unemployment") +
theme_bw() +
scale_color_manual(values = c("red", "blue", "green", "sky blue", "black", "grey", "brown", "gold", "dark green", "pink" ))
##Final ScatterPlot
Total %>%
ggplot(mapping = aes(x = Number_Unemployed, y = Number_of_Accidents, color = `District Name`)) +
geom_point(size = 5) +
xlab("Number of Unemployed") +
ylab("Number of Accidents") +
ggtitle("Number of Accidents for district names filled by unemployment") +
theme_bw() +
scale_color_manual(values = c("red", "blue", "green", "sky blue", "black", "grey", "brown", "gold", "dark green", "pink" ))
##Bar Graph for Unemployment statistics in 2017
unemploy %>%
filter(Year == "2017" & `District Name` != "No consta")%>%
arrange(`District Name`) %>%
group_by(`District Name`, Demand_occupation) %>%
summarize( Number_Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Number_Unemployed, fill = Demand_occupation)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Unemployment Type") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
str(unemploy)
Unemployed
NewA
head(unemploy)
accidents
unemploy
accidents <- read_csv("..//Data//accidents_2017.csv")
unemploy <- read_csv("..//Data//unemployment.csv")
unemploy
##Getting total number of unemployed people by District name
unemploy %>%
select(`District Name`, Year, Number, Demand_occupation) %>%
filter(Year == 2017) %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number)) ->
Unemployed
Unemployed
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017) %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number)) ->
Unemployed
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017) %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number))
##Bar Graph for Unemployment statistics in 2017
unemploy %>%
filter(Year == "2017" & `District Name` != "No consta")%>%
arrange(`District Name`) %>%
group_by(`District Name`, Demand_occupation) %>%
summarize( Number_Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Number_Unemployed, fill = Demand_occupation)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Unemployment Type") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & 'District Name' != "No consta") %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`District Name`) %>%
group_by(`District Name`) %>%
summarize( Number_Unemployed = sum(Number))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Gender_Unemployed = sum(Number))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`, `District Name`) %>%
group_by(`Gender`, `District Name`) %>%
summarize( Gender_Unemployed = sum(Number))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`, `District Name`) %>%
group_by(`Gender`, `District Name`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts filled by Gender") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Gender") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Unemployed = sum(Number))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `Gender`, y = Unemployed)) +
geom_col() +
ggtitle("Unemployment w.r.t. Gender") +
xlab("Gender") +
ylab("Number Of Unemployed people") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `Gender`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Gender") +
xlab("Gender") +
ylab("Number Of Unemployed people") +
theme_bw() +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
gen <- c("Male" = "red",
"Female" = "blue")
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `Gender`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Gender") +
xlab("Gender") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_manual(
values = gen,
limits = names(gen)) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`, `District Name`) %>%
group_by(`Gender`, `District Name`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts filled by Gender") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Gender") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
values = gen,
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`, `District Name`) %>%
group_by(`Gender`, `District Name`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts filled by Gender") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
# scale_fill_discrete(name = "Gender") +
scale_fill_manual(
values = gen,
limits = names(gen)) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
##Bar Graph for Unemployment statistics in 2017
unemploy %>%
filter(Year == "2017" & `District Name` != "No consta")%>%
arrange(`District Name`) %>%
group_by(`District Name`, Demand_occupation) %>%
summarize( Number_Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Number_Unemployed, fill = Demand_occupation)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Unemployment Type") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
unemploy %>%
filter(Year == "2017" & `District Name` != "No consta")%>%
arrange(`District Name`) %>%
group_by(`District Name`, Demand_occupation) %>%
summarize( Number_Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `District Name`, y = Number_Unemployed, fill = Demand_occupation)) +
geom_col() +
ggtitle("Unemployment w.r.t. Districts") +
xlab("District Name") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_discrete(name = "Unemployment Type") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
gen <- c("Male" = "red",
"Female" = "blue")
unemploy %>%
select(`District Name`,Gender, Year, Number, Demand_occupation) %>%
filter(Year == 2017 & `District Name` != "No consta") %>%
arrange(`Gender`) %>%
group_by(`Gender`) %>%
summarize( Unemployed = sum(Number)) %>%
ggplot(mapping = aes(x = `Gender`, y = Unemployed, fill = Gender)) +
geom_col() +
ggtitle("Unemployment w.r.t. Gender") +
xlab("Gender") +
ylab("Number Of Unemployed people") +
theme_bw() +
scale_fill_manual(
values = gen,
limits = names(gen)) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
install.packages("tinytex")
tinytex::install_tinytex()
